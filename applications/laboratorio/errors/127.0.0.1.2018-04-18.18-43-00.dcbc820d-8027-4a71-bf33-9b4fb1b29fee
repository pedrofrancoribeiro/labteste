(dp1
S'output'
p2
S"<type 'exceptions.RuntimeError'> Cannot compare baixa1.dia_hora >= None"
p3
sS'layer'
p4
S'/home/pedro/Workspace/Projetos/LabInstru/web2py_lab/applications/laboratorio/controllers/baixa1.py'
p5
sS'code'
p6
S'#coding: utf-8\n@auth.requires_login()\ndef exibir():\n\tprint request.vars\n\trows = db((db.baixa1.dia_hora>="2014-12-31 19:00:00")&(db.baixa1.dia_hora<="2014-12-31 19:50:00")).select()\n\n\n\theaders = request.vars.keys()\n\tfields = request.vars.values()\n\n\t# fields = ["dia_hora","record","batt_volt_min","p_temp","nr_lite_avg","cm3_up_avg","cm3_dn_avg",\n\t# \t\t\t"cg3_up_corr_avg","cg3_dn_corr_avg","cnr1_tc_avg","cma11_up_avg","cma11_dn_avg","li_190s_avg",\n\t# \t\t\t"vw_avg","hfp01_avg","stp01_50cm_avg","stp01_20cm_avg","stp01_10cm_avg","stp01_05cm_avg",\n\t# \t\t\t"stp01_02cm_avg","hmp45c_temp_avg","hmp45c_rh_avg","wind_speed","win_direction","tb4_tot"]\n\n\ttable = TABLE(THEAD(TR(*[B(header) for header in headers])),\n\t\t\tTBODY(*[TR(*[TD(row[field]) for field in fields]) for row in rows]))\n\ttable["_class"]="table table-striped"\n\treturn dict(table=table)\n\n@auth.requires_login()\ndef exibir2():\n\tcount_registros = 0\n\tif request.vars[\'page\']:\n\t\tdata = session.data\n\t\tlista_de_chaves = session.lista_de_chaves\n\t\ttam_list = len(lista_de_chaves)\n\t\tfields = []\n\t\tif tam_list == 3:\n\t\t    fields = baixa1_field\n\t\telse:\n\t\t\tfor valor in  lista_de_chaves:\n\t\t\t\tif type(valor) == int and valor not in [26,27]:\n\t\t\t\t\tfields.append(baixa1_field[valor])\n\t\tquery = db((db.baixa1.dia_hora>=data[0])&(db.baixa1.dia_hora<=data[1]))\n\t\tcount_registros = db((db.baixa1.dia_hora>=data[0])&(db.baixa1.dia_hora<=data[1])).count()\n\t\ttable = SQLFORM.grid(query, user_signature=False, create=False, searchable=False, deletable=False, editable=False, details=False,\n\t\tpaginate=7, sortable = False, csv = True, links_in_grid=False,maxtextlength=15, links_placement= \'both\',formstyle=\'table3cols\',fields=fields)\n\t\ttable.element(\'.web2py_counter\',replace=None)\n\t\ttable.element(\'table\')[\'_class\'] = \'table table-striped table-condesed show\'\n\t\ttable.elements(\'a.btn.btn-default\')[0][\'_class\']= \'btn btn-success\'\n\t\ttable.elements(\'a.btn.btn-default\')[1][\'_class\']= \'btn btn-success\'\n\t\ttable.elements(\'a.btn.btn-default\')[2][\'_class\']= \'btn btn-success\'\n\t\ttable.elements(\'a.btn.btn-default\')[3][\'_class\']= \'btn btn-success\'\n\t\ttable.elements(\'a.btn.btn-default\')[4][\'_class\']= \'btn btn-success\'\n\t\ttable.elements(\'a.btn.btn-default\')[5][\'_class\']= \'btn btn-success\'\n\t\ttable.elements(\'a.btn.btn-default\')[6][\'_class\']= \'btn btn-success\'\t\n\telif not request.vars[\'_export_type\']:\n\t\tdata = process_data([request.vars[\'26\'],request.vars[\'27\']])\n\t\tlista_de_chaves = request.vars.keys()\n\t\tlista_de_chaves = list(map(int, lista_de_chaves))\n\t\tlista_de_chaves.sort()\n\t\ttam_list = len(lista_de_chaves)\n\t\tfields = []\n\t\tif tam_list == 3:\n\t\t    fields = baixa1_field\n\t\telse:\n\t\t\tfor valor in  lista_de_chaves:\n\t\t\t\tif type(valor) == int and valor not in [26,27]:\n\t\t\t\t\tfields.append(baixa1_field[valor])\n\t\tquery = db((db.baixa1.dia_hora>=data[0])&(db.baixa1.dia_hora<=data[1]))\n\t\tcount_registros = db((db.baixa1.dia_hora>=data[0])&(db.baixa1.dia_hora<=data[1])).count()\n\t\tsession.data = data\n\t\tsession.lista_de_chaves = lista_de_chaves\n\t\ttable = SQLFORM.grid(query, user_signature=False, create=False, searchable=False, deletable=False, editable=False, details=False,\n\t\tpaginate=7, sortable = False, csv = True, links_in_grid=False,maxtextlengths={\'baixa1.dia_hora\':30}, links_placement= \'both\',formstyle=\'divs\',fields=fields)\n\t\ttable.element(\'.web2py_counter\',replace=None)\n\t\ttable.element(\'table\')[\'_class\'] = \'table table-striped table-condesed show\'\n\t\ttable.elements(\'a.btn.btn-default\')[0][\'_class\']= \'btn btn-success\'\n\t\ttable.elements(\'a.btn.btn-default\')[1][\'_class\']= \'btn btn-success\'\n\t\ttable.elements(\'a.btn.btn-default\')[2][\'_class\']= \'btn btn-success\'\n\t\ttable.elements(\'a.btn.btn-default\')[3][\'_class\']= \'btn btn-success\'\n\t\ttable.elements(\'a.btn.btn-default\')[4][\'_class\']= \'btn btn-success\'\n\t\ttable.elements(\'a.btn.btn-default\')[5][\'_class\']= \'btn btn-success\'\n\t\ttable.elements(\'a.btn.btn-default\')[6][\'_class\']= \'btn btn-success\'\n\telse:\n\t\tdata = session.data\n\t\tlista_de_chaves = session.lista_de_chaves\n\t\ttam_list = len(lista_de_chaves)\n\t\tfields = []\n\t\tif tam_list == 3:\n\t\t    fields = baixa1_field\n\t\telse:\n\t\t\tfor valor in  lista_de_chaves:\n\t\t\t\tif type(valor) == int and valor not in [26,27]:\n\t\t\t\t\tfields.append(baixa1_field[valor])\n\t\tquery = db((db.baixa1.dia_hora>=data[0])&(db.baixa1.dia_hora<=data[1]))\n\t\tcount_registros = db((db.baixa1.dia_hora>=data[0])&(db.baixa1.dia_hora<=data[1])).count()\n\t\tsession.data = data\n\t\tsession.lista_de_chaves = lista_de_chaves\n\t\ttable = SQLFORM.grid(query, user_signature=False, create=False, searchable=False, deletable=False, editable=False, details=False,\n\t\tpaginate=7, sortable = False, csv = True, links_in_grid=False,maxtextlength=15, links_placement= \'both\',formstyle=\'table3cols\',fields=fields)\n\t\ttable.element(\'.web2py_counter\',replace=None)\n\t\ttable.element(\'table\')[\'_class\'] = \'table table-striped table-condesed show\'\n\t\ttable.elements(\'a.btn.btn-default\')[0][\'_class\']= \'btn btn-primary\'\n\t\ttable.elements(\'a.btn.btn-default\')[1][\'_class\']= \'btn btn-primary\'\n\t\ttable.elements(\'a.btn.btn-default\')[2][\'_class\']= \'btn btn-primary\'\n\t\ttable.elements(\'a.btn.btn-default\')[3][\'_class\']= \'btn btn-primary\'\n\t\ttable.elements(\'a.btn.btn-default\')[4][\'_class\']= \'btn btn-primary\'\n\t\ttable.elements(\'a.btn.btn-default\')[5][\'_class\']= \'btn btn-primary\'\n\t\ttable.elements(\'a.btn.btn-default\')[6][\'_class\']= \'btn btn-primary\'\n\treturn dict(table=table,count_registros=count_registros)\n\n@auth.requires_login()\n@auth.requires_membership("admin")\ndef inserir():\n    mensagem = None\n    mensagemClass = None\n    resultado = []\n    if request.vars:\n    \tfile = request.vars\n    \tif is_dat(file):\n    \t\tresultado = process_file(file)\n    \t\tif resultado[0] == resultado[1]:\n\t    \t\tmensagemClass = "alert alert-success alert-dismissable"\n\t    \t\tmensagem = "Processo de inser\xc3\xa7\xc3\xa3o de dados realizado com sucesso!"\n\t    \telif resultado[0] == resultado[2]:\n\t    \t\tmensagemClass ="alert alert-danger alert-dismissable"\n\t    \t\tmensagem = "Nenhuma tupla persistida!"\n\t    \telse:\n\t    \t\tif resultado[1] == 0:\n\t\t    \t\tmensagemClass = "alert alert-danger alert-dismissable"\n\t\t    \t\tmensagem = "Nenhuma tupla persistida!"\n\t\t    \telse:\n\t\t    \t\tmensagemClass = "alert alert-info alert-dismissable"\n\t\t    \t\tmensagem = "Algumas tuplas podem n\xc3\xa3o ter sido inseridas!"\n    \telse:\n    \t\tmensagemClass = "alert alert-warning alert-dismissable"\n    \t\tmensagem = session.auth.user.first_name + " voc\xc3\xaa informou um arquivo com extens\xc3\xa3o inv\xc3\xa1lida!"\n    \t\tresultado =[None, None, None, None, None, None,None]\n    return dict(mensagem=mensagem,mensagemClass=mensagemClass,resultado=resultado)\n\n@auth.requires_login()\ndef selecionar():\n\tif request.args:\n\t\tfunction = request.args(0)\n\treturn dict(function=function)\n\n@auth.requires_login()\n@auth.requires_membership("admin")\ndef apagar():\n    if request.vars[\'id\']:\n        lista = request.vars[\'id\']\n        if type(lista) is list:\n            for item in lista:\n                query_remove = db.baixa1.id == int(item)\n                db(query_remove).delete()\n        else:\n            query_remove = db.baixa1.id == int(lista)\n            db(query_remove).delete()\n        data = session.data\n        lista_de_chaves = session.lista_de_chaves\n        lista_de_chaves.sort()\n        tam_list = len(lista_de_chaves)\n        fields = []\n        if tam_list == 3:\n            fields = baixa1_field\n        else:\n            for valor in  lista_de_chaves:\n                if type(valor) == int and valor not in [26,27]:\n                    fields.append(baixa1_field[valor])\n        query = db((db.baixa1.dia_hora>=data[0])&(db.baixa1.dia_hora<=data[1]))\n        session.data = data\n        session.lista_de_chaves = lista_de_chaves\n        table = SQLFORM.grid(query, user_signature=False, create=False, searchable=False, deletable=False, editable=False, details=False,paginate=10, sortable = False, csv = False, links_in_grid=False,maxtextlength=15, links_placement= \'both\',formstyle=\'divs\',fields=fields,selectable=lambda ids : redirect(URL(\'baixa1\',\'apagar\',vars=dict(id=ids))))\n    elif request.vars[\'records\']:\n        lista = request.vars[\'records\']\n        if type(lista) is list:\n            for item in lista:\n                query_remove = db.baixa1.id == int(item)\n                db(query_remove).delete()\n        else:\n            query_remove = db.baixa1.id == int(lista)\n            db(query_remove).delete()\n        data = session.data\n        lista_de_chaves = session.lista_de_chaves\n        lista_de_chaves.sort()\n        tam_list = len(lista_de_chaves)\n        fields = []\n        if tam_list == 3:\n            fields = baixa1_field\n        else:\n            for valor in  lista_de_chaves:\n                if type(valor) == int and valor not in [26,27]:\n                    fields.append(baixa1_field[valor])\n        query = db((db.baixa1.dia_hora>=data[0])&(db.baixa1.dia_hora<=data[1]))\n        session.data = data\n        session.lista_de_chaves = lista_de_chaves\n        table = SQLFORM.grid(query, user_signature=False, create=False, searchable=False, deletable=False, editable=False, details=False,paginate=10, sortable = False, csv = False, links_in_grid=False,maxtextlength=15, links_placement= \'both\',formstyle=\'divs\',fields=fields,selectable=lambda ids : redirect(URL(\'baixa1\',\'apagar\',vars=dict(id=ids))))\n    elif request.vars[\'page\']:\n        data = session.data\n        lista_de_chaves = session.lista_de_chaves\n        tam_list = len(lista_de_chaves)\n        fields = []\n        if tam_list == 3:\n            fields = baixa1_field\n        else:\n            for valor in  lista_de_chaves:\n                if type(valor) == int and valor not in [26,27]:\n                    fields.append(baixa1_field[valor])\n        query = db((db.baixa1.dia_hora>=data[0])&(db.baixa1.dia_hora<=data[1]))\n        table = SQLFORM.grid(query, user_signature=False, create=False, searchable=False, deletable=False, editable=False, details=False,paginate=10, sortable = False, csv = False, links_in_grid=False,maxtextlength=15, links_placement= \'both\',formstyle=\'divs\',fields=fields,selectable=lambda ids : redirect(URL(\'baixa1\',\'apagar\',vars=dict(id=ids))))\n    else:\n        data = process_data([request.vars[\'26\'],request.vars[\'27\']]);\n        lista_de_chaves = request.vars.keys()\n        lista_de_chaves = list(map(int, lista_de_chaves))\n        lista_de_chaves.sort()\n        tam_list = len(lista_de_chaves)\n        fields = []\n        if tam_list == 3:\n            fields = baixa1_field\n        else :\n            for valor in  lista_de_chaves:\n                if type(valor) == int and valor not in [26,27]:\n                    fields.append(baixa1_field[valor])\n        query = db((db.baixa1.dia_hora>=data[0])&(db.baixa1.dia_hora<=data[1]))\n        session.data = data\n        session.lista_de_chaves = lista_de_chaves\n        table = SQLFORM.grid(query, user_signature=False, create=False, searchable=False, deletable=False, editable=False, details=False,paginate=10, sortable = False, csv = False, links_in_grid=False,maxtextlength=15, links_placement= \'both\',formstyle=\'divs\',fields=fields,selectable=lambda ids : redirect(URL(\'baixa1\',\'apagar\',vars=dict(id=ids))))\n    return dict(table=table)\n\n@auth.requires_login()\ndef disponibilidade():\n    from datetime import datetime\n    data_atual = datetime.now()\n    years = get_min_max_years()\n    if request.vars:\n        mes = int(request.vars[\'cb1-mes\'])\n        ano = int(request.vars[\'cb1-ano\'])\n    else:\n        mes = data_atual.month\n        ano = data_atual.year\n    return dict(ano_minimo=years[\'min\'],ano_maximo=years[\'max\'],mes=mes, ano=ano)\n\n\nresponse._vars=response._caller(exibir2)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/pedro/Workspace/Projetos/LabInstru/web2py_lab/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/pedro/Workspace/Projetos/LabInstru/web2py_lab/applications/laboratorio/controllers/baixa1.py", line 236, in <module>\n  File "/home/pedro/Workspace/Projetos/LabInstru/web2py_lab/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/pedro/Workspace/Projetos/LabInstru/web2py_lab/gluon/tools.py", line 4241, in f\n    return action(*a, **b)\n  File "/home/pedro/Workspace/Projetos/LabInstru/web2py_lab/applications/laboratorio/controllers/baixa1.py", line 62, in exibir2\n    count_registros = db((db.baixa1.dia_hora>=data[0])&(db.baixa1.dia_hora<=data[1])).count()\n  File "/home/pedro/Workspace/Projetos/LabInstru/web2py_lab/gluon/packages/dal/pydal/objects.py", line 2010, in count\n    return db._adapter.count(self.query, distinct)\n  File "/home/pedro/Workspace/Projetos/LabInstru/web2py_lab/gluon/packages/dal/pydal/adapters/base.py", line 1321, in count\n    self.execute(self._count(query, distinct))\n  File "/home/pedro/Workspace/Projetos/LabInstru/web2py_lab/gluon/packages/dal/pydal/adapters/base.py", line 1308, in _count\n    sql_w = \' WHERE \' + self.expand(query)\n  File "/home/pedro/Workspace/Projetos/LabInstru/web2py_lab/gluon/packages/dal/pydal/adapters/base.py", line 952, in expand\n    rv = op(first, second, **optional_args)\n  File "/home/pedro/Workspace/Projetos/LabInstru/web2py_lab/gluon/packages/dal/pydal/adapters/base.py", line 767, in AND\n    return \'(%s AND %s)\' % (self.expand(first), self.expand(second))\n  File "/home/pedro/Workspace/Projetos/LabInstru/web2py_lab/gluon/packages/dal/pydal/adapters/base.py", line 954, in expand\n    rv = op(first, **optional_args)\n  File "/home/pedro/Workspace/Projetos/LabInstru/web2py_lab/gluon/packages/dal/pydal/adapters/base.py", line 874, in GE\n    raise RuntimeError("Cannot compare %s >= None" % first)\nRuntimeError: Cannot compare baixa1.dia_hora >= None\n'
p11
s.